# -*- coding: utf-8 -*-
"""ColorClassification-ML-Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Samreen1244/ColorClassification-ML-Project/blob/master/ColorClassification_ML_Project.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import cv2
from collections import Counter
import os

# %matplotlib inline

from google.colab import drive
drive.mount('/content/drive')

index=["color","color_name","hex","R","G","B"]
csv = pd.read_csv('/content/colors.csv', names=index, header=None)

print(csv)

print(csv['color_name'])

image = cv2.imread('yellow.jpg')
print("The type of this input is {}".format(type(image)))
print("Shape: {}".format(image.shape))
plt.imshow(image)

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
plt.imshow(gray_image, cmap='gray')

image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
plt.imshow(image)

resized_image = cv2.resize(image, (1200, 600))
plt.imshow(resized_image)

def RGB2HEXADECIMAL(color):
    return "#{:02x}{:02x}{:02x}".format(int(color[0]), int(color[1]), int(color[2]))

def get_image(image_path):
    image = cv2.imread(image_path)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    return image

def get_colors(image, number_of_colors, show_chart):
  modified_image = cv2.resize(image, (600, 400), interpolation = cv2.INTER_AREA)
  modified_image = modified_image.reshape(modified_image.shape[0]*modified_image.shape[1], 3)
  clf = KMeans(n_clusters = number_of_colors)
  labels = clf.fit_predict(modified_image)
  counts = Counter(labels)
  center_colors = clf.cluster_centers_
  # We get ordered colors by iterating through the keys
  ordered_colors = [center_colors[i] for i in counts.keys()]
  hex_colors = [RGB2HEXADECIMAL(ordered_colors[i]) for i in counts.keys()]
  rgb_colors = [ordered_colors[i] for i in counts.keys()]
  
  if (show_chart):
      plt.figure(figsize = (8, 6))
      plt.pie(counts.values(), labels = hex_colors, colors = hex_colors,autopct='%1.1f%%',)
      plt.title("Color Classification")

  return rgb_colors

get_colors(get_image("/content/yellow.jpg" ), 8, True)

image = cv2.imread('/content/indteam.jpg')
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
plt.imshow(image)

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
plt.imshow(gray_image, cmap='gray')

get_colors(get_image("/content/indteam.jpg" ), 8, True)